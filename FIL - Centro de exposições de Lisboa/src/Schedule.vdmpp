class Schedule
instance variables
  room:Room;
  initialDate:Date;
  finalDate:Date;
	inv finalDate.compareDate(initialDate) or ((finalDate.compareDate(initialDate) or initialDate.compareDate(finalDate)) = false); 
	-- The final date needs to be bigger or equal to the initial date

operations
	public Schedule : Room*Date*Date ==> Schedule
		Schedule(r, iDate, fDate) == 
		(
			room := r;
			initialDate := iDate;
			finalDate := fDate;
			return self;
		);
		
		--returns the maximum number of allowed people that is present in the room 
		public pure getRoomSpace : () ==> nat1
			getRoomSpace() == (return room.getSpace());	
			
		--returns the id of the reserved room
		public pure getIdRoom : () ==> nat1
			getIdRoom() == (return room.getId());
			
		--returns the price per day of the reserved room	
		public pure getPricePerDay : () ==> nat1
			getPricePerDay()== (return room.getPricePerDay());
		
		-- checks if 2 given dates overlap this schedule/reservation
		public pure overlaps : Date * Date * nat1 ==> bool
			overlaps(iDate, fDate, idRoom) == (
				if idRoom<>room.getId()
					then return false
				else if iDate.compareDate(finalDate)
					then return false
				else if initialDate.compareDate(fDate)
					then return false
				else return true
			)
			pre fDate.compareDate(iDate) or ((fDate.compareDate(iDate) or iDate.compareDate(fDate)) = false);  -- that initial date needs to be <= to the final date	
end Schedule
